.wrapper {
  background-color: #fff;
}
.page {
  @include adaptiveValue("padding-top", 104, 68,0,1920,1366.98);
}
[class*="__container"] {
  width: 100%;
  // max-width: ; 1230+40 = 1270/900
  @include adaptiveValue("max-width", 1270, 900,0,1920,1366.98);
  padding-left: toRem(20);
  padding-right: toRem(20);
  margin-inline: auto;
}

%wrapper {
  max-width: toRem(1840);
  width: 100%;
  padding: toRem(0) toRem(20);
  margin-inline: auto;
}

%hover {
  overflow: hidden;
  position: relative;
  @media (any-hover: hover){
    &:hover{
      color: #fff;
      &::before {
        transform: scale(1);
        transform-origin: 0 50%;
      }
      svg {
        path {
          fill: #fff;
        }
      }
    }
  }
  svg {
    position: relative;
    z-index: 2;
    path {
      transition: fill .3s ease;
    }
  }
  span {
    position: relative;
    z-index: 2;
    display: inline-block;
  }
  transition: color .3s ease .1s;
  &:before {
    content: '';
    position: absolute;
    z-index: 0;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color:#000;
    transform: scale(0,1);
    transform-origin: 100% 50%;
    transition: transform .45s cubic-bezier(0.215, 0.61, 0.355, 1);
    border-radius: inherit;
  }
}

%pddTopB {
  @include adaptiveValue("padding-top", 100, 60,0,1920,1366.98);
  @include adaptiveValue("padding-bottom", 100, 60,0,1920,1366.98);
}

%pddTop {
  @include adaptiveValue("padding-top", 100, 60,0,1920,1366.98);
}
%pddBottom {
  @include adaptiveValue("padding-bottom", 100, 60,0,1920,1366.98);
}

%gridCards {
  display: grid;
  @include adaptiveValue("gap", 16, 10,2,1920,1366.98);
  @include adaptiveValue("gap", 10, 16,3,1366.98,480.98);
  &:not(:last-child) {
    @include adaptiveValue("margin-bottom", 40, 20,0,1920,1366.98);
  }
  @media (min-width:toEm(820.98)){
    grid-template-columns: repeat(3,1fr);
  }
  @media (max-width:toEm(820.98)) and (min-width:toEm(600.98)) {
    grid-template-columns: repeat(2,1fr);
  }
}

// %gridRep3-1fr {
//   grid-template-columns: repeat(3,1fr);
// }
// %gridRep2-1fr {
//   grid-template-columns: repeat(2,1fr);
// }

%btnCardsWrapper {
  .btn {
    @media (min-width:toEm(820.98)){
      grid-column: 2/3;
    }
    @media (max-width: toEm(820.98)) and (min-width:toEm(600.98)) {
      grid-column: 1/3;
      max-width: toRem(340);
      margin: 0 auto;
    }
  }
}

%hoverCards {
  position: relative;
  border: toRem(2) solid transparent;
  border-radius: toRem(20);
  transition: border-color .3s ease, box-shadow .3s ease;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  height: 100%;
  @media (any-hover: hover){
    &:hover{
      box-shadow: 0px 5px 30px 0px rgb(212, 229, 240);
      border-color: $blue;
      .card-pr__title,
      .item-art__title {
        color: $blue;
      }
      svg {
        path {
          fill: $blue;
        }
      }
    }
  }
}

%brRad20 {
  border-radius: toRem(20);
}

%grid {
  display: grid;
}
%gap20-10 {
  @include adaptiveValue("gap", 20, 10,0,1920,1366.98);
}

// === colors =====================

.c-blue {
  color: $blue;
}
.bg-blue {
  background-color: $blue;
}
.bg-gray {
  background-color:$gray;
}

.bg-pink {
  background-color:#EC7489;
}
.bg-green {
  background-color:#63B56B;
}
.bg-purple {
  background-color:#8C7EDF;
}
.bg-l-blue {
  background-color:#3AAAC2;
}

.bg-blue-f6 {
  background-color: $blue-f6;
}

.c-pink {
  color:#EC7489;
}
.c-green {
  color:#63B56B;
}
.c-purple {
  color:#8C7EDF;
}
.c-l-blue {
  color:#3AAAC2;
}

.btn {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  font-weight: 500;
  color: #fff;
  position: relative;
  overflow: hidden;
  @extend %hover;
  
  &.btn--01 {
    background-color:$orange;
    @include adaptiveValue("font-size", 18, 16,0,1920,1366.98);
    border-radius: toRem(14);
    @include adaptiveValue("min-height", 60,48,0,1920,1366.98);
    @include adaptiveValue("padding-left", 37, 29,0,1920,1366.98);
    @include adaptiveValue("padding-right", 37, 29,0,1920,1366.98);
    @media (max-width:$mobile){
        height: toRem(60);
    }
  }
  &.btn--02 {
    @extend %brRad20;
    // border-radius: toRem(20);
    background-color:$orange;
    font-size: toRem(18);
    min-height: toRem(70);
  }
  &.btn--03 {
    background-color:$black;
    font-size: toRem(16);
    color: #fff;
    border-radius: toRem(16);
    @include adaptiveValue("min-height", 80, 70,0,1920,1366.98);
    @media (any-hover: hover){
      &:hover{
        color:#000;
      }
    }
    &:before { 
      background-color:#fff;
    }
  }
  &.btn--04 {
    @extend %brRad20;
    // border-radius: toRem(20);
    border: toRem(2) solid #000;
    @include adaptiveValue("font-size", 22, 18,0,1920,1366.98);
    @include adaptiveValue("min-height", 90,70,0,1920,1366.98);
    color: #000;
    &::before {
      border-radius: toRem(16);
    }
    @media (any-hover: hover){
      &:hover{
        color: #fff;
      }
    }
  }
}

.main-txt {
  font-weight: 500;
  @include adaptiveValue("font-size", 30, 22,2,1920,1366.98);
  @include adaptiveValue("font-size", 22, 20,3,1366.98,480.98);
  &:not(:last-child) {
    @include adaptiveValue("margin-bottom", 40, 20,0,1920,480.98);
  }
}

.sub-title {
  @include adaptiveValue("font-size", 40, 28,2,1920,1366.98);
  @include adaptiveValue("font-size", 28, 20,3,1366.98,480.98);
}

.title-main {
  text-align: center;
  font-weight: 700;
  @include adaptiveValue("font-size", 60, 42,2,1920,1366.98);
  @include adaptiveValue("font-size", 42, 30,3,1366.98,480.98);
  &:not(:last-child) {
    @include adaptiveValue("margin-bottom", 40, 30,0,1920,480.98);
  }
}
.title-head {
  font-weight: 700;
  @include adaptiveValue("font-size", 60, 42,2,1920,1366.98);
  @include adaptiveValue("font-size", 42, 30,3,1366.98,480.98);
}


%fs16-14-16 {
  @include adaptiveValue("font-size", 16, 14,2,1920,1366.98);
  @include adaptiveValue("font-size", 14, 16,3,1366.98,480.98);
}


:is(.txt-block, .cards-block, .form-start, .spoller, .cards-grid) h2 {
  font-weight: 700;
  @include adaptiveValue("font-size", 50, 35,2,1920,1366.98);
  @include adaptiveValue("font-size", 35, 30,3,1366.98,480.98);
}
:is(.txt-block.bg-blue, .cards-block.bg-blue) {
  h2 {
    span {
      color: #fff;
    }
  }
  .main-txt {
    color: #fff;
  }
}


.breadcrumb {
  @media (min-width:$mobileSmall){
    padding: toRem(10) 0;
  }
  @media (max-width:$mobileSmall){
    display: none;
  }
  // .breadcrumb__wrapper
  &__wrapper {
    @extend %wrapper;
  }
  // .breadcrumb__list
  &__list {
    @media (min-width:$mobileSmall){
      display: flex;
      align-items: center;
      flex-wrap: wrap;
    }
  }
  // .breadcrumb__item
  &__item {
    @media (min-width:$mobileSmall){
      display: block;
      list-style: none;
      font-size: toRem(14);
      a {
        color: rgba(0, 0, 0, 0.2);
        transition: color .3s ease;
        @media (any-hover: hover){
          &:hover{
            color: rgba(0, 0, 0, 1);
          }
        }
      }
      &:not(:last-child) {
        margin-right: toRem(3);
        a {
          &::after {
            content:'/';
          }
        }
      }
      &:last-child {
        span {
          color: rgba(0, 0, 0, 0.2);
        }
      }
    }
  }
}

// == TEXT BLOCK ========================
.txt-block {
  @extend %pddTopB;
  &.bg-blue {
  }
  // .txt-block__container
  &__container {
    @extend %grid;
    // display: grid;
    gap: toRem(20);
    @media (min-width:toEm(650.98)){
      grid-template-columns: 1fr 56%;
    }
  }
  // .txt-block__aside
  &__aside {
    h2 {
      .target &,
      .sub-target & {
        color: #EC7489;
      }
      .google &,
      .sub-google & {
        color: #63B56B;
      }
      .seo &,
      .sub-seo & {
        color: #8C7EDF;
      }
      .development &,
      .sub-development & {
        color: #3AAAC2;
      }
      .sub-category & {
        color: $blue;
      }
    }
  }
  // .txt-block__body
  &__body {
    p {
      &:not(:last-child) {
        @include adaptiveValue("margin-bottom", 20, 10,0,1920,1366.98);
      }
    }
  }
}

